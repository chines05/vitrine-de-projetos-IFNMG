generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String               @id @default(uuid())
  nome           String
  email          String               @unique
  senha          String
  role           Role                 @default(COORDENADOR)
  especializacao Especializacao?
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  projetos       Projeto[]            @relation("ProjetosDoCoordenador")
  tccs           TCC[]                @relation("TCCsDoCoordenador")
  participacoes  ProjetoParticipante[] @relation("ParticipacoesDoUsuario")
  
  @@map("users")
}

model Aluno {
  id        String                @id @default(uuid())
  nome      String
  turma     String
  curso     String
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  projetos  ProjetoParticipante[] @relation("ParticipacoesDoAluno")
  tccs      TCC?
  
  @@map("alunos")
}

model Projeto {
  id            String          @id @default(uuid())
  titulo        String
  descricao     String          @db.Text
  dataInicio    DateTime
  dataFim       DateTime?
  tipo          TipoProjeto
  status        StatusProjeto   @default(ATIVO)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  coordenador   User            @relation("ProjetosDoCoordenador", fields: [coordenadorId], references: [id])
  coordenadorId String
  participantes ProjetoParticipante[]
  imagens       ImagemProjeto[]

  @@map("projetos")
}

model ProjetoParticipante {
  id        String   @id @default(uuid())
  projeto   Projeto  @relation(fields: [projetoId], references: [id])
  projetoId String
  aluno     Aluno?   @relation("ParticipacoesDoAluno", fields: [alunoId], references: [id])
  alunoId   String?
  user      User?    @relation("ParticipacoesDoUsuario", fields: [userId], references: [id])
  userId    String?
  funcao    String
  tipo      TipoParticipante
  createdAt DateTime @default(now())

  @@unique([projetoId, alunoId, userId])
  @@map("projeto_participante")
}

enum TipoParticipante {
  ALUNO
  SERVIDOR
}

model ImagemProjeto {
  id        String   @id @default(uuid())
  url       String
  projeto   Projeto  @relation(fields: [projetoId], references: [id])
  projetoId String
  principal Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("imagens_projeto")
}

model TCC {
  id            String   @id @default(uuid())
  titulo        String
  curso         String
  resumo        String   @db.Text
  dataDefesa    DateTime
  file          String
  aluno         Aluno    @relation(fields: [alunoId], references: [id])
  alunoId       String   @unique
  coordenador   User     @relation("TCCsDoCoordenador", fields: [coordenadorId], references: [id])
  coordenadorId String
  orientador    String
  createdAt     DateTime @default(now())

  @@map("tccs")
}

enum Role {
  ADMIN
  COORDENADOR
  COORDENADOR_CURSO
  PROFESSOR
}

enum TipoProjeto {
  PESQUISA
  ENSINO
  EXTENSAO
}

enum StatusProjeto {
  ATIVO
  CONCLUIDO
  PAUSADO
  CANCELADO
}

enum Especializacao {
  PESQUISA
  ENSINO
  EXTENSAO
  TECNOLOGO_EM_PROCESSOS_GERENCIAIS
  TECNOLOGIA_EM_ANALISE_E_DESENVOLVIMENTO_DE_SISTEMAS
  BACHARELADO_EM_ENGENHARIA_AGRONOMICA
}
