generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  nome      String
  email     String    @unique
  senha     String
  role      Role      @default(COORDENADOR)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projetos  Projeto[] @relation("ProjetosDoCoordenador")
  tccs      TCC[]     @relation("TCCsDoCoordenador")

  @@map("users")
}

model Aluno {
  id        String         @id @default(uuid())
  nome      String
  turma     String
  curso     String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  projetos  ProjetoAluno[]
  tccs      TCC?

  @@map("alunos")
}

model Projeto {
  id            String         @id @default(uuid())
  titulo        String
  url           String         @unique
  descricao     String         @db.Text
  dataInicio    DateTime
  dataFim       DateTime?
  tipo          TipoProjeto
  status        StatusProjeto  @default(ATIVO)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  coordenador   User           @relation("ProjetosDoCoordenador", fields: [coordenadorId], references: [id])
  coordenadorId String
  participantes ProjetoAluno[]
  imagem        ImagemProjeto?

  @@map("projetos")
}

model ProjetoAluno {
  id        String   @id @default(uuid())
  projeto   Projeto  @relation(fields: [projetoId], references: [id])
  aluno     Aluno    @relation(fields: [alunoId], references: [id])
  projetoId String
  alunoId   String
  funcao    String
  createdAt DateTime @default(now())

  @@unique([projetoId, alunoId])
  @@map("projeto_aluno")
}

model ImagemProjeto {
  id        String   @id @default(uuid())
  url       String
  projeto   Projeto  @relation(fields: [projetoId], references: [id])
  projetoId String   @unique
  createdAt DateTime @default(now())

  @@map("imagens_projeto")
}

model TCC {
  id            String   @id @default(uuid())
  titulo        String
  curso         String
  resumo        String   @db.Text
  dataDefesa    DateTime
  file          String
  aluno         Aluno    @relation(fields: [alunoId], references: [id])
  alunoId       String   @unique
  coordenador   User     @relation("TCCsDoCoordenador", fields: [coordenadorId], references: [id])
  coordenadorId String
  orientador    String
  createdAt     DateTime @default(now())

  @@map("tccs")
}

enum Role {
  ADMIN
  COORDENADOR
  COORDENADOR_CURSO
}

enum TipoProjeto {
  PESQUISA
  ENSINO
  EXTENSAO
}

enum StatusProjeto {
  ATIVO
  CONCLUIDO
  PAUSADO
  CANCELADO
}
